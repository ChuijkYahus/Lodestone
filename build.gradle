buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradleVersion}", changing: false
        classpath "org.spongepowered:mixingradle:${mixingradleVersion}"
        classpath "org.parchmentmc:librarian:${librarianVersion}"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'java-library'

version = "${project.minecraftVersion}-${project.modVersion}"
if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}
group = 'team.lodestar.lodestone'
archivesBaseName = project.modId
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets { main.resources.srcDirs += 'src/generated/resources' }

mixin {
    add sourceSets.main, "${project.modId}.refmap.json"
    config "${project.modId}.mixins.json"
}

minecraft {
    mappings channel: 'parchment', version: "${parchmentVersion}-${minecraftVersion}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            args '--mod', "${project.modId}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                self {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name 'Curios maven'
        url "https://maven.theillusivec4.top/"
    }

    maven {
        name 'JEI maven'
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { url 'https://maven.blamejared.com/' }
    maven {
        name = "Curse Maven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"

    // Use this to make sure it functions in the intellij environment
    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor "org.spongepowered:mixin:${mixinVersion}:processor"
    }

    // JEI Dependency
    compileOnly fg.deobf("mezz.jei:jei-${minecraftVersion}:${jeiVersion}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraftVersion}:${jeiVersion}")

    // Curios dependency
    api fg.deobf("top.theillusivec4.curios:curios-forge:${minecraftVersion}-${curiosVersion}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${minecraftVersion}-${curiosVersion}")

    // Other Mod Compatibility
    api fg.deobf("curse.maven:farmers_delight-398521:3739914")

    implementation fg.deobf("com.sammy.malum:malum:1.18.2-1.5-27")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "Lodestone",
                "Specification-Vendor": "Lodestar",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Lodestar",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs" :"${project.modId}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName

            from components.java
            fg.component(it)
            jarJar.component(it)
        }
    }
    repositories {
        maven {
            url = uri("file://${System.getenv("local_maven")}")
        }
    }
}