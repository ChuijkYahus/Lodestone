buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${project.minecraftVersion}-${project.modVersion}"
if (System.getenv('BUILD_NUMBER') != null) {
    version += "." + System.getenv('BUILD_NUMBER')
}
group = 'team.lodestar.lodestone'
archivesBaseName = project.modId
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

mixin {
    add sourceSets.main, "${project.modId}.refmap.json"
}

minecraft {
    mappings channel: 'parchment', version: '2022.03.13-1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', "${project.modId}", '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                self {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name 'Curios maven'
        url = "https://maven.theillusivec4.top/"
    }

    maven {
        name 'JEI maven'
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "CTM Maven"
        url = "https://maven.tterrag.com/"
    }
    maven { url = 'https://maven.blamejared.com/' }
    maven {
        name = "Curse Maven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
    }

//    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18-5.0.2.4:api")
//    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18-5.0.2.4")

    compileOnly fg.deobf('mezz.jei:jei-1.18.2:9.7.0.193:api')
    runtimeOnly fg.deobf('mezz.jei:jei-1.18.2:9.7.0.193')

//    implementation fg.deobf("se.mickelus.mutil:mutil:1.18.1-4.4.0")
//    implementation fg.deobf("se.mickelus.tetra:tetra:1.18.1-4.8.0")
    implementation fg.deobf("curse.maven:curios-309927:3748873")
    implementation fg.deobf("curse.maven:shimmer-627824:3808077")
    implementation fg.deobf("curse.maven:farmers_delight-398521:3739914")
//    implementation fg.deobf("curse.maven:selene-499980:3742343")
//    implementation fg.deobf("curse.maven:supplementaries-412082:3749228")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "lodestone",
                "Specification-Vendor": "sammy",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"sammy",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs" :"${project.modId}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}
java {
    withJavadocJar()
    withSourcesJar()
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            pom.withXml {

                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    println 'Surpressing artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                    assert dep.parent().remove(dep)
                }
            }
        }
    }
    repositories {
        maven {
            url = uri("file://${System.getenv("local_maven")}")
        }
    }
}